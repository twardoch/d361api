# this_file: pyproject.toml
[project]
name = "d361api"
dynamic = ["version"]
description = "Document360 Customer API"
readme = "README.md"
requires-python = ">=3.10"
license = "MIT"
keywords = ["OpenAPI", "OpenAPI-Generator", "Document360 Customer API"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: Implementation :: CPython",
    "Programming Language :: Python :: Implementation :: PyPy",
]

dependencies = [
    "urllib3>=1.25.3,<3.0.0",
    "python-dateutil>=2.8.2",
    "aiohttp>=3.8.4",
    "aiohttp-retry>=2.8.3",
    "pydantic>=2",
    "typing-extensions>=4.7.1",
]


include = ["d361api/py.typed"]


[project.optional-dependencies]

dev = [
    "pre-commit>=3.6.0",
    "ruff>=0.1.0",
    "mypy>=1.0.0",
    "pyupgrade>=3.19.0",
    "tox>=3.9.0",
    "flake8>=4.0.0",
    "types-python-dateutil>=2.8.19.14",
    "mypy>=1.5",
]

test = ["pytest>=7.0.0", "pytest-cov>=4.0.0"]


all = [
    "urllib3>=1.25.3,<3.0.0",
    "python-dateutil>=2.8.2",
    "aiohttp>=3.8.4",
    "aiohttp-retry>=2.8.3",
    "pydantic>=2",
    "typing-extensions>=4.7.1",
]

[project.scripts]
# CLINAME = "d361api.__main__:main"


[[project.authors]]
name = "AUTHOR_NAME"
email = "adam+github@twardoch.com"

[project.urls]
Documentation = "https://github.com/twardoch/d361api#readme"
Issues = "https://github.com/twardoch/d361api/issues"
Source = "https://github.com/twardoch/d361api"


[build-system]
build-backend = "hatchling.build"
requires = ["hatchling>=1.21.0", "hatch-vcs>=0.3.0"]


[tool.coverage.paths]
d361api = ["d361api", "*/d361api"]
tests = ["tests", "*/tests"]


[tool.coverage.report]
exclude_lines = ["no cov", "if __name__ == .__main__.:", "if TYPE_CHECKING:"]

[tool.coverage.run]
source_pkgs = ["d361api", "tests"]
branch = true
parallel = true
omit = ["d361api/__about__.py"]


[tool.hatch.build.hooks.vcs]
version-file = "d361api/__version__.py"


[tool.hatch.build.targets.wheel]
packages = ["d361api"]


[tool.hatch.envs.default]
dependencies = []

[[tool.hatch.envs.all.matrix]]
python = ["3.10", "3.11", "3.12"]


[tool.hatch.envs.default.scripts]
test = "pytest {args:tests}"
test-cov = "pytest --cov-report=term-missing --cov-config=pyproject.toml --cov=d361api --cov=tests {args:tests}"
type-check = "mypy d361api tests"
lint = [
    "ruff check d361api tests",
    "ruff format --respect-gitignore d361api tests",
]
fix = [
    "ruff check  --fix --unsafe-fixes d361api tests",
    "ruff format --respect-gitignore d361api tests",
]


[tool.hatch.envs.lint]
detached = true
dependencies = []


[tool.hatch.envs.lint.scripts]
typing = "mypy --install-types --non-interactive {args:d361api tests}"
style = ["ruff check {args:.}", "ruff format --respect-gitignore {args:.}"]
fmt = ["ruff format --respect-gitignore {args:.}", "ruff check --fix {args:.}"]
all = ["style", "typing"]


[tool.hatch.envs.test]
dependencies = []

[tool.hatch.envs.test.scripts]
test = "python -m pytest -n auto -p no:briefcase {args:tests}"
test-cov = "python -m pytest -n auto -p no:briefcase --cov-report=term-missing --cov-config=pyproject.toml --cov=d361api --cov=tests {args:tests}"
bench = "python -m pytest -v -p no:briefcase tests/test_benchmark.py --benchmark-only"
bench-save = "python -m pytest -v -p no:briefcase tests/test_benchmark.py --benchmark-only --benchmark-json=benchmark/results.json"

[tool.hatch.version]
source = "vcs"


[tool.hatch.version.raw-options]
version_scheme = "post-release"


[tool.mypy]
check_untyped_defs = true
disallow_incomplete_defs = true
disallow_untyped_calls = true
disallow_untyped_decorators = true
disallow_untyped_defs = true
extra_checks = true
no_implicit_optional = true
python_version = "3.10"
warn_no_return = true
warn_redundant_casts = true
warn_return_any = true
warn_unreachable = true
warn_unused_configs = true
warn_unused_ignores = true
files = [
    "d361api",
    #"test",  # auto-generated tests
    "tests", # hand-written tests
]

[[tool.mypy.overrides]]
module = ["d361api.configuration"]


[tool.pylint.'MESSAGES CONTROL']
extension-pkg-whitelist = "pydantic"


[tool.ruff]
target-version = "py310"
line-length = 88

[tool.ruff.lint]
select = [
    'A',
    'ARG',
    'B',
    'C',
    'DTZ',
    'E',
    'EM',
    'F',
    'FBT',
    'I',
    'ICN',
    'ISC',
    'N',
    'PLC',
    'PLE',
    'PLR',
    'PLW',
    'PT',
    'PTH',
    'PYI',
    'RET',
    'RSE',
    'RUF',
    'S',
    'SIM',
    'T',
    'TCH',
    'TID',
    'UP',
    'W',
    'YTT',
]
ignore = [
    'B027',
    'C901',
    'FBT003',
    'PLR0911',
    'PLR0912',
    'PLR0913',
    'PLR0915',
    'PLR1714',
    'PLW0603',
    'PT013',
    'PTH123',
    'PYI056',
    'S105',
    'S106',
    'S107',
    'S110',
    'SIM102',
    "ARG001",
    "E501",
    "EXE003",
    "I001",
    "ISC001",
    "PLR2004",
    "RUF001",
]

[tool.ruff.per-file-ignores]
"tests/*" = ["S101"]


[tool.pytest.ini_options]
addopts = "-v --durations=10 -p no:briefcase"
asyncio_mode = "auto"
console_output_style = "progress"
filterwarnings = ["ignore::DeprecationWarning", "ignore::UserWarning"]
log_cli = true
log_cli_level = "INFO"
markers = [
    "benchmark: marks tests as benchmarks (select with '-m benchmark')",
    "unit: mark a test as a unit test",
    "integration: mark a test as an integration test",
    "permutation: tests for permutation functionality",
    "parameter: tests for parameter parsing",
    "prompt: tests for prompt parsing",
]
norecursedirs = [
    ".*",
    "build",
    "dist",
    "venv",
    "__pycache__",
    "*.egg-info",
    "_private",
]

python_classes = ["Test*"]
python_files = ["test_*.py"]
python_functions = ["test_*"]
testpaths = ["tests"]


[tool.pytest-benchmark]
min_rounds = 100
min_time = 0.1
histogram = true
storage = "file"
save-data = true
compare = [
    "min",    # Minimum time
    "max",    # Maximum time
    "mean",   # Mean time
    "stddev", # Standard deviation
    "median", # Median time
    "iqr",    # Inter-quartile range
    "ops",    # Operations per second
    "rounds", # Number of rounds
]
